import"./modulepreload-polyfill-B5Qt9EMX.js";import{o as l}from"./options-storage-CfhD3UO8.js";import{d as q}from"./bookmarksync-BBedGguP.js";const A=q();async function L(){const m=document.querySelector("#options-form"),d=document.querySelector(".check-connection-btn"),o=document.querySelector(".connection-message");let r=!1,i=!1;const p=(e,n)=>{o.textContent=n,o.className="",o.classList.add("connection-message",e)},y=()=>{o.textContent="",o.className="",o.classList.add("connection-message","hidden")},s=e=>{d.textContent=e==="in-progress"?"Checkingâ€¦":"Check Connection(s)",d.disabled=e==="in-progress"};d.addEventListener("click",async()=>{if(!r){r=!0,i=!1,y(),s("in-progress");try{if(await A.validateBookmarks(),i){s(null);return}s("success"),p("success","Success")}catch(e){if(i){s(null);return}s("error"),p("error",e.message)}finally{r=!1,i=!1}}});const g=()=>{r||(s(null),y())};async function f(e,n){const a=document.querySelector(`div#${n}`),h=c=>{const t=a.querySelector(".custom-host-container");c?t.classList.remove("hidden"):t.classList.add("hidden"),t.querySelector("input").required=c},k=()=>{a.querySelector(`[name='${n}_githubApiUrl']`).value=""},S=async()=>{const c=`${n}_useCustomHost`,t=`${n}_githubApiUrl`,{[c]:u=!1}=await l.getAll();h(u),u||(await l.set({[t]:""}),k())};function v(){return async function(){const c=`${n}_active`,{[c]:t=!0}=await l.getAll();for(const u of a.querySelectorAll('input:not([type="checkbox"])'))u.required=t;t?a.classList.remove("hidden"):a.classList.add("hidden")}}const w=v();e.addEventListener("options-sync:form-synced",async()=>{await C()});async function C(){await w(),await S(),i=!0,g()}await C()}await f(m,"source1"),await f(m,"source2"),await l.syncForm(m)}L();
